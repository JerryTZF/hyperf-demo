version: "3.5"

services:
  traefik-proxy:
    image: traefik:v2.3.4
    command:
      - "--api"
      - "--accesslog=true"
      # Docker swarm configuration
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=proxy"
      # Configure entrypoint
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # SSL configuration
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.email=tzfforyou@gamil.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      # Global HTTP -> HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    networks:
      - proxy
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
    deploy:
      mode: global
      update_config:
        parallelism: 1 # 更新时将会一个一个更新
        failure_action: rollback # 更新失败将会回滚
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints:
          - "node.role==manager"
      labels:
        - "traefik.enable=true"
        # http -> https
        - "traefik.http.routers.http2https.rule=HostRegexp(`{any:.+}`)"
        - "traefik.http.routers.http2https.entrypoints=web"
        - "traefik.http.routers.http2https.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
        # dashboard
        - "traefik.http.routers.api.rule=Host(`traefik.tzf-foryou.com`)"
        - "traefik.http.routers.api.entrypoints=websecure"
        - "traefik.http.routers.api.tls.certresolver=le"
        - "traefik.http.routers.api.service=api@internal"
        # auth middleware
        - "traefik.http.routers.api.middlewares=api-auth"
        - "traefik.http.middlewares.api-auth.basicauth.users=admin:xxxxxxxxxxxxxxxxxxxxxxxx"
        - "traefik.http.services.api.loadbalancer.server.port=80"

networks:
  proxy:
    external: true

volumes:
  traefik-certificates: